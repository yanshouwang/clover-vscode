{
    "Flutter Stateless ViewModel": {
        "prefix": "stlessvm",
        "description": "Insert a StatelessViewModel",
        "body": [
            "abstract class $1ViewModel extends StatelessViewModel {",
            "  factory $1ViewModel() => _$1ViewModel();",
            "}",
            "",
            "class _$1ViewModel extends StatelessViewModel implements $1ViewModel {",
            "}"
        ]
    },
    "Flutter Stateful ViewModel": {
        "prefix": "stfulvm",
        "description": "Insert a StatefulViewModel",
        "body": [
            "abstract class $1ViewModel extends StatefulViewModel {",
            "  factory $1ViewModel() => _$1ViewModel();",
            "}",
            "",
            "class _$1ViewModel extends StatefulViewModel implements $1ViewModel {",
            "}"
        ]
    },
    "Flutter Stateless Widget with ViewMdoelProvider": {
        "prefix": "stlessvvm",
        "description": "Insert a StatelessWidget with a StatelessViewModelProvider",
        "body": [
            "class $1View extends StatelessWidget with StatelessViewModelProvider<$1ViewModel> {",
            "  $1View({ Key? key }) : super(key: key);",
            "",
            "  @override",
            "  $1ViewModel createViewModel() {",
            "    return $1ViewModel();",
            "  }",
            "",
            "  @override",
            "  Widget build(BuildContext context) {",
            "    return Container(",
            "      $2",
            "    );",
            "  }",
            "}"
        ]
    },
    "Flutter Stateful Widget with ViewModelProvider": {
        "prefix": "stfulvvm",
        "description": "Insert a StatefulWidget with a StatefulViewModelProvider",
        "body": [
            "class $1View extends StatefulWidget {",
            "  const $1View({ Key? key }) : super(key: key);",
            "",
            "  @override",
            "  State<$1View> createState() => _$1ViewState();",
            "}",
            "",
            "class _$1ViewState extends State<$1View> with StatefulViewModelProvider<$1View, $1ViewModel> {",
            "  @override",
            "  $1ViewModel createViewModel() {",
            "    return $1ViewModel();",
            "  }",
            "",
            "  @override",
            "  Widget build(BuildContext context) {",
            "    return Container(",
            "      $2",
            "    );",
            "  }",
            "}"
        ]
    }
}